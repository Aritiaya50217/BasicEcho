Server-Sent-Events (SSE)
    การส่งข้อมูลจากเซิร์ฟเวอร์ไปยังไคลเอนต์แบบ real-time โดยใช้ HTTP connection ที่เปิดค้างไว้ ซึ่งสามารถส่งข้อมูลจากเซิร์ฟเวอร์ไปยังไคลเอนต์ได้อย่างต่อเนื่องโดยไม่ต้องมีการร้องขอซ้ำจากไคลเอนต์
    
    การใช้งาน SSE ใน Golang
        - กำหนด Headers ให้ถูกต้อง: เซิร์ฟเวอร์ต้องตั้งค่า header Content-Type เป็น text/event-stream และ Cache-Control เป็น no-cache เพื่อบอกว่าเป็นการส่งข้อมูลแบบ SSE
        - ส่งข้อมูลแบบ Stream: ใช้ write เพื่อส่งข้อมูลเป็นข้อความแบบ stream ไปยังไคลเอนต์ในช่วงเวลาที่กำหนด

    การใช้งาน SSE ใน Golang
        - การรักษาการเชื่อมต่อ: ควรใช้ http.Flusher เพื่อให้ข้อมูลถูกส่งไปยังไคลเอนต์ทันทีที่มีข้อมูลใหม่
        - การรีเชื่อมต่อ: หากการเชื่อมต่อล้มเหลว, EventSource ในฝั่งไคลเอนต์จะพยายามเชื่อมต่อใหม่โดยอัตโนมัติ
        - การจัดการกับปริมาณข้อมูล: ควรระมัดระวังการส่งข้อมูลมากๆ หรือข้อมูลที่ไม่จำเป็นทุกครั้ง เพราะอาจส่งผลต่อประสิทธิภาพ


    สรุป
        การใช้ Server-Sent Events (SSE) ใน Golang เป็นวิธีที่ง่ายและมีประสิทธิภาพในการส่งข้อมูลแบบ real-time จากเซิร์ฟเวอร์ไปยังไคลเอนต์ 
    โดยไม่ต้องร้องขอจากไคลเอนต์ซ้ำๆ การใช้งาน SSE นี้เหมาะสำหรับกรณีที่ข้อมูลมีการอัปเดตบ่อยๆ เช่น การแสดงผลข้อมูลสด, การแจ้งเตือน, หรือการติดตามสถานะต่างๆ แบบ real-time.    